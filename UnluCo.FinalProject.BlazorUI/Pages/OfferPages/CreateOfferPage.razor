@page "/products/{id:int}/offer"
@inherits CreateOfferViewModel
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Http;
@using UnluCo.FinalProject.BlazorUI.ViewModels;
@if (Model is null)
{
    <p>Loading....</p>
}
else
{
<EditForm Model="@Model" class="col-6 mx-auto" OnValidSubmit="@Register">
    <h3>Offer</h3>
    <hr />
    <p class="badge-danger">Enter the exact value or as a percentage</p>

    <div class="form-group row">
        <label for="name" class="col-sm-2 col-form-label">
            Amount
        </label>
        <div class="col-sm-6">
            <InputText id="amountInput" class="form-control" placeholder="Only integers"
                       @bind-Value="Amount" />

        </div>
    </div>
    <div class="form-group row">
        <label for="name" class="col-sm-2 col-form-label">
            Percentage
        </label>
        <div class="col-sm-6">
            <InputText id="percentageInput" class="form-control" placeholder="accepted format: 10,20 ...100..."
                       @bind-Value="Percentage" />
        </div>
    </div>
   


    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

}

@code {
    public string Amount { get; set; }
    public string Percentage { get; set; }
    [Parameter]
    public int Id { get; set; }

    HttpClient client = new HttpClient();

    public CreateOfferViewModel Model { get; set; }

    protected override  void OnInitialized()
    {
        Amount = "0";
        Percentage = "0";
        Model = new CreateOfferViewModel();
    }


    public async void Register()
    {
        Model.Amount = Convert.ToInt32(Amount);
        Model.Percentage = Convert.ToInt32(Percentage);
        Model.ProductId=Id;
        var request = new HttpRequestMessage();


        request.RequestUri = new Uri("http://localhost:19383/api/Offers");
        request.Method = HttpMethod.Post;

        request.Headers.Add("Accept", "*/*");


        var bodyString = System.Text.Json.JsonSerializer.Serialize(Model);

        var content = new StringContent(bodyString, System.Text.Encoding.UTF8, "application/json");
        request.Content = content;

        var response = await client.SendAsync(request);


        var responseMessage = await response.Content.ReadAsStringAsync();
        //Response result = JsonConvert.DeserializeObject<Response>(responseMessage);
        //if (result.Status == "Success")
        //{
        //    await JsRuntime.InvokeVoidAsync("alert", result.Message);

        //}
    }


}
